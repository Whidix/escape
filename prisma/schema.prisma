// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String @id
  name       String
  credential String
  email      String @unique

  sessions Session[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model EscapeGame {
  id          String @id
  name        String
  description String

  sessions EscapeSession[]
  steps    EscapeStep[]
}

enum StepType {
  TEXT
  QUESTION
  GEO
  PUZZLE
}

model EscapeStep {
  id       String   @id
  escapeId String
  name     String
  order    Int
  type     StepType
  answer   String?
  text     String?
  geo      String?
  puzzle   String?

  items  EscapeItem[]
  escape EscapeGame @relation(fields: [escapeId], references: [id])

  @@unique([escapeId, order])
}

model EscapeSession {
  id         String   @id
  escapeId   String
  code       String
  progress   Int      @default(1)
  inventory  EscapeItem[]
  validUntil DateTime

  escape  EscapeGame       @relation(fields: [escapeId], references: [id])
  players EscapePlayer[]
}

model EscapePlayer {
  token           String @default(cuid()) @unique
  escapeSessionId String
  cgu             Boolean

  session EscapeSession @relation(fields: [escapeSessionId], references: [id])

  @@unique([escapeSessionId, token])
}

model EscapeItem {
  id         String @id
  sessionId  String
  escapeId   String
  name       String

  session EscapeSession @relation(fields: [sessionId], references: [id])
  step    EscapeStep    @relation(fields: [escapeId], references: [id])

  @@unique([sessionId, id])
  @@unique([escapeId, name])
}
